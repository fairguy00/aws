1. RDS
-AWS에 데이터베이스 구축: EC2에 DB를 설치하거나(unmanaged), AWS의 RD서비스를 이용하거나(managed)
-AWS RSD의 제약사항: 버전이 제한적이다/캐퍼시티에 상한선이 있다/OS에 로그인할 수 없다/파일시스템에 로그인할 수 없다/IP addresss 고정할수 없음
/일부기능을 사용할 수 없다/ 개별배치는 적용불가능
-AWS RDS 특징: 매니지드형이라 고가용성이고 멀티AZ에 Master/slave 구성을 간단히 구축할 수 있다.(동기식 레필리카,페일오버기능)
참조전용 레플리카(비동기식)를 최대 5대(Aurora는 15대)설치 가능하여 RD의 읽기처리를 스케일 아웃할 수 있다.
자동으로 스냅샷보존관리할 수 있어서 장애 내구성이 높다(보관은 S3에 된다)
-DB 인스턴스의 암호화:
보관시 인스턴스와 스냅샷에 대해 암호화가 가능하다.
암호화대상:DB인스턴스, 자동백업, 리드레플리카, 스냅샷
암호방식:AES-256방식, AWS KMS 에 의한 키관리, 리드레플리카도 같은 키를 사용, 인스턴스 작성시에만 설정가능,
스냅샷 카피에도 암호화, 리스토어 가능

2. 스케일링
-데이터베이스의 퍼포먼스 저하: 읽기처리가 늦다, 쓰기가 중단된다 등등
-직렬 스케일링:메모리나 CPU를 변경(스케일업/스케일다운)
-병렬 스케일링:처리하는 기기나 서버수를 변경(스케일아웃/스케일인)
-스케일업:인스턴스 사이즈를 변경/인스턴스타입을 변경(스케일아웃/스케일인)
-스케일아웃:리드 레플리카를 증설/캐쉬이용/Aurora에 이행(시험에서 스케일 아웃을 자주 물어봄)

3. 스케일아웃
-리드 레플리카의 증설:
최대 5대(Aurora는 15대) 설치가능
멀티 AZ나 크로스리전에서도 병용가능
인스턴스나 스토리지 타입이 달라도 설정가능
장애대응등에서 리드레플리카에서 standalone DB 인스턴스에 수동으로 전환가능(Aurora제외)
Aurora의 경우엔 프라이머리 인스턴스로 변경가능
-캐시의 이용:읽기처리의 일부를 캐시로 보존하여 고속쿼리처리를 실현. ElasticCache이용. MYSQL의 옵션기능 이용
ElasticCache(쿼리를 캐시에 보존해 놓고, 캐시에 있는 쿼리면 캐시에서 없는 쿼리면 DB에서 쿼리를 실행함)
MYSQL의 옵션기능(Memcached를 이용하여 인메모리 캐시기능을 이용한다)
-엄밀히 말하면 스케일 아웃은 아니지만, Aurora에 이행하면 퍼포먼스 향상을 꾀할수 있다

4. DynamoDB
-완전 매니지드형인 NoSQL 데이터베이스 서비스
-기능 확장이 용이함, 저지연성, 고가용성(데이터가 3개의 AZ에 보관), 매니지드형
-프로비전드 스루풋:테이블당 Read(100)와 Write(1000)에 필요한 스루풋 캐퍼시티를 할당하고 있다.
-스톨리지 용량제한이 없음: 데이터 용량증가에 대한 디스크나 노드증설이 필요없다
-사용예:
빅데이터(대용량 데이터의 수집, 축적, 분선을 위한 데이터베이스로 활용.  Hadoop과 연계하여 빅데이터 처리가 가능)
어플리캐이션(대규모 서비스에서의 데이터 고속처리가 필요한 어플리캐이션에 활용, 여러명의 유저가 한번에 억세스 하는 어플리캐이션에 대한 데이터처리등)
유저행동 데이터 관리(유저정보, 게임, 광과등의 유저행동 데이터용 DB, 유저ID당 여러개의 행동이력관리등)
백엔드 데이터처리(모바일 어플의 백엔드/배치처리의 락관리/플래시마케팅, 스톨리지의 인덱스등)

5. DynamoVB Stream
-DynamoDB 테이블에 보존된 항목의 추가, 변경, 삭제 발생지의 이력을 캡쳐하는 기능
-데이터 보존(과거 24시간이내의 데이터변경이력을 저장하여 24시간을 경과하면 삭제됨. 데이터용량은 매니지드형으로 자동적을 관리된다)
-사용예:
크로스리전 레플리캐이션(스트림에 의한 캡션을 트리거로 하여 크로스리전 레플리캐이션을 실시할 수 있다)
데이터 갱신을 트리거로 한 어플리캐이션기능(DynamoDB의 입력을 트리거로 하여 Lambda 함수에 의해 여러가지 처리를 자동화 하는등)

6. DynamoDB Accelerator(DAX)
-DynamoDB에 인메모리캐시형 기능을 추가함
-인메모리캐시로서 1대의 밀리초단위에서 마이코르초단위까지 정합성이 높은 워크로드 응답시간을 단축. 멀티 AZ DAX클러스터는 1초에 수백만건의 리퀘스트를 처리할 수 있다.
-읽기처리가 많은 워크로드나 급속히 증가하는 워크로드에 대해 DAX는 스루풋을 강화하거나 읽기 캐퍼시티 유닛을 필요이상으로 프로비저닝 하지 않도록 설계함으로써 운영비용을 절약할 수 있다.

7. 글로벌 테이블
-리전간 동가되는 멀티 마스터 테이블 작성가능
-DynamoDB의 성능을 유지하면서 세계에 있는 다수의 리전에 엔드포인트를 설치할 수있다.
-읽기 캐퍼시티에 더해 크로스리전 어플리캐이션의 데이터전송요금이 부과된다
-정합성 설정은 불가능

8. 온디맨드 백업
-퍼포먼스에 관계없이 수백TB의 백업도 실행가능.

9. Read/Write 캐퍼시티 온디맨드
-캐퍼시티의 설정 필요없이 리퀘스트에 따른 요금설정이 가능하게 됨(트래픽양이 예측이 어려울경우에 사용, 프로비전드 캐퍼시티설정의 변경은 무제한으로 할 수 있다. 하지만 온디맨드의 변경은 하루 한번만 가능하다)

10. Aurora
-분산형 RD/ NoSQL의 분산처리속도와 RDB의 데이터 조작성을 양립
-병렬처리기능이 좋아 대량 읽기쓰기를 하는데 적합.
-MYSQL/PostreSQL 과 호환성을 가짐
-과거의 데이터를 S3에 계속적으로 백업함
-1개의 인스턴스와 1개의 DB클러스터 볼륨으로 구성되며 3개의 AZ에 복제됨
-마스터와 리드 레플리카(최대15개)를 하나의 DB클러스터를 구성한다. 접속은 엔드포인트를 통해 한다. Write는 마스터로, Reader는 레플리카로 나눠서 처리할 수 있다.
-멀티 마스터를 구성하면 Write처리도 유연하게 구축가능하다.
-사용예: 대규모 쿼리가 발생하는 RDB환경, 쿼리의 병렬처리가 많음, 데이터가 큼, 테이블이 많음 등, 트랜젝션 발생량 많음 등

11. Aurora 글로벌 DB
-타 리전에 대한 고성능 리드 레플리카 작성기능
-로그 전송이 아닌 스톨리지 레빌의 레플리캐이션