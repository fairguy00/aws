1. 관련서비스
- Cloud Formation, Code 시리즈(CodeCommit, CodeBuild, CodeDeploy), ECS, Auto Scaling, Elastic Beanstalk, OpsWorks, EC2 Run Command
- 환경을 자동화함으로써 개발속도를 높이는 DevOps와 CI/CD를 통한 개발을 실현

2. 서비스 상세
- Code 시리즈(CodeCommit, CodeBuild, CodeDeploy): 개발코드의 Git 상의 커밋 실행 및 배로를 자동화. Pipeline은 CloudFormation과 ECS의 배포자동화에도 이용 가능

- Elastic Beanstalk: 웹 응용 프로그램이나 서비스를 자주쓰는 서버에서 배포 및 스케일링하기 위한 서비스

- OpsWorks: Chef 및 Puppet의 관리형 인스턴스 서버 설정, 배포, 관리를 자동화할 수 있게 되는 설정 관리 서비스

- CloudFormation: 클라이드 환경 내의 모든 인프라스트럭처 리소스를 코드화하고 프로비저닝하기 위해 템플릿화된 프로비저닝 서비스

- CloudWatch: EC2 인스턴스나 EBS 볼륨, DB 인스턴스 또는 커스텀 매트릭스 등의 자원을 쉽게 모니터링할 수 있는

- Amazon ECS: AWS 상에서 Docker컨테이너에 의한 환경 구축 템플릿을 실현하는 서비스. Docker File에 환경 이미지를 설정하고 인프라 설정을 코드화함

3. Elastic Beanstalk
- 빠르고 간단하게 애플리케이션을 배포하는 서비스

- Java, PHP, Ruby, Python, Node.js, .NET, Docker, Go에 대응하여 WEB어플리케이션을 전개할 수 있다.

- Apache, Nginx, Passenger, IIS 등 익숙한 서버에서 배포 및 스케일링 가능

- 코드를 업로드하면 캐퍼시티의 프로비저닝, 로드밸런싱, Auto Scaling 부터 애플리케이션의 헬스 모니터링까지 배포자동화 할 수 있다

- 사용례:
웹서버 구축시(ELB + Auto Scaling으로 구성을 코드화하여 유연한 웹 애플리케이션을 실행할 수 있다. 단일 컨테이너라면 Docker 컨테이너, 여러개의 컨테이너는 ECS를 사용한 환경 실행이 가능)
워커환경구축시(SQS + Auto Scailing으로 확장 가능한 배치 처리 워크 구현. 정기적인 작업 실행 기반을 만들 수 있다. 매일 심야 1시에 동작하는 백업 처리등)

4. OpsWorks
- Chef는 다양한 형식의 인프라에 대한 서버나 애플리케이션의 전개를 용이하게 하는 환경 자동화프레임워크

- OpsWorks는 이 Cjef나 Puppet에 의한 인프라 설정,웅용 시스템을 AWS상에서 관리형 서비스로서 제공한다.

- OpsWorks for Chef Automation: Chef 서버 생성 및 지속적 디플로이먼트 및 컴플라이언스 체크를 위한 완전 관리형 서버 서비스

- OpsWorks for Puppet Enterprise: 풀 관리형 Puppet 마스터로 애플리케이션의 테스트, 전개, 운용을 자동화 한다

5. CloudFormation
- AWS 클라우드 환경 내의 모든 인프라 자원을 기술하고 템플릿화하여 전개하는 환경 자동 설정 서비스

- 프로비저닝된 리소스의 변경 및 삭제 가능

- 추가 리소스에 통상 과금만 적용되고 추가 요금 없음

- JSON/YAML로 기술

- 크로시 리전과 크로스 계정으로 관리

- 직접 지원도지 않은 리소스나 기능을 이용하는 경우 커스텀 리소스로 스택 작성의 일부에 독자적인 로직을 포함할 수 있음

6. 아마존의 컨테이너 서비스

- 레지스트리: Amazon Elastic

- 컨테이너 관리: Amazon ECS, Amazon EKS

- 컨테이너 실행환경: AWS Fargate

7. Elastic Container Service (ECS)

- Docker 컨테이너를 지원하는 확장성과 퍼포먼스가 뛰어난 컨테이너 오케스트레이션 서비스

- 컨테이너화된 앱을 AWS에서 쉽게 실행 및 스케일 할 수 있다.

- Fargate를 이용하면 컨테이너의 배포와 관리에 필요한 서버의 프로비저닝 및 관리는 불필요

- 모든 종류의 컨테이너화된 어플리케이션을 쉽게 작성 가능

- Docker 컨테이너의 수가 수십이어도 몇 초만에 간단하게 기동